
package proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://services.webservicesoap.sn.esp/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * 
     * @param adminPassword
     * @param adminUsername
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdminToken", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.GetAdminToken")
    @ResponseWrapper(localName = "getAdminTokenResponse", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.GetAdminTokenResponse")
    @Action(input = "http://services.webservicesoap.sn.esp/UserService/getAdminTokenRequest", output = "http://services.webservicesoap.sn.esp/UserService/getAdminTokenResponse")
    public String getAdminToken(
        @WebParam(name = "adminUsername", targetNamespace = "")
        String adminUsername,
        @WebParam(name = "adminPassword", targetNamespace = "")
        String adminPassword);

    /**
     * 
     * @param token
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.DeleteUserResponse")
    @Action(input = "http://services.webservicesoap.sn.esp/UserService/deleteUserRequest", output = "http://services.webservicesoap.sn.esp/UserService/deleteUserResponse")
    public String deleteUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<proxy.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.GetUsersResponse")
    @Action(input = "http://services.webservicesoap.sn.esp/UserService/getUsersRequest", output = "http://services.webservicesoap.sn.esp/UserService/getUsersResponse")
    public List<User> getUsers(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param password
     * @param role
     * @param token
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.AddUserResponse")
    @Action(input = "http://services.webservicesoap.sn.esp/UserService/addUserRequest", output = "http://services.webservicesoap.sn.esp/UserService/addUserResponse")
    public String addUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.LoginResponse")
    @Action(input = "http://services.webservicesoap.sn.esp/UserService/loginRequest", output = "http://services.webservicesoap.sn.esp/UserService/loginResponse")
    public String login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param role
     * @param token
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://services.webservicesoap.sn.esp/", className = "proxy.UpdateUserResponse")
    @Action(input = "http://services.webservicesoap.sn.esp/UserService/updateUserRequest", output = "http://services.webservicesoap.sn.esp/UserService/updateUserResponse")
    public String updateUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "token", targetNamespace = "")
        String token);

}
